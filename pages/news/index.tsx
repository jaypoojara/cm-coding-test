import Head from "next/head";
import { FoundNewsLists } from "../../components/features/found-news-lists";
import { Divider } from "../../components/shared/divider/divider";
import { Layout } from "../../components/templates/layout";
import { ContentFulApiResponse } from "../../interfaces/contentFulApiResponse";
import { ContentFulNewsConfig } from "../../interfaces/contentFulNewsConfig";
import { getNewsItems } from "../../lib/contentfulService";
import { TopLAtestNews } from "../../components/features/top-latest-news";

const Home = (props: ContentFulApiResponse) => {
  const { logoDetails, menuLabel, searchLabel, pageTitle } = props;
  return (
    <div>
      <Head>
        <title>{pageTitle}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Layout logoDetails={logoDetails} menuLabel={menuLabel}>
        <main className="py-8 ">
          <TopLAtestNews />
          <Divider className="my-6" />
          <FoundNewsLists searchLabel={searchLabel} />
        </main>
      </Layout>
    </div>
  );
};

export async function getServerSideProps() {
  const fields: ContentFulNewsConfig | undefined = await getNewsItems();

  let logoUrl: string,
    logoWidth: number,
    logoHeight: number,
    logoTitle: string,
    menuLabel: string,
    searchLabel: string,
    pageTitle: string;

  logoUrl = "/vercel.svg";
  logoWidth = 150;
  logoHeight = 50;
  logoTitle = "";
  menuLabel = "News";
  searchLabel = "Filter & Refine";
  pageTitle = "CredibleMind Cm test task";

  if (fields) {
    // logo details
    const {
      logo: {
        fields: {
          title: responseLogoTitle,
          file: {
            url: responseLogoUrl,
            details: {
              image: { width: responseLogoWidth, height: responseLogoHeight },
            },
          },
        },
      },
      menuLabel: responseMenuLabel,
      searchLabel: responseSearchLabel,
      title: responsePageTitle,
    } = fields;

    logoUrl = responseLogoUrl;
    logoWidth = responseLogoWidth;
    logoHeight = responseLogoHeight;
    logoTitle = responseLogoTitle;
    menuLabel = responseMenuLabel;
    searchLabel = responseSearchLabel;
    pageTitle = responsePageTitle;
  }

  return {
    props: {
      logoDetails: { logoUrl, logoHeight, logoWidth, logoTitle },
      menuLabel,
      searchLabel,
      pageTitle,
    },
  };
}

export default Home;
